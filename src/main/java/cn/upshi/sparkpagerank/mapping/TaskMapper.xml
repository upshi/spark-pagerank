<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.upshi.sparkpagerank.dao.TaskDao">
    <resultMap id="BaseResultMap" type="cn.upshi.sparkpagerank.model.Task">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="start_url" property="startUrl" jdbcType="VARCHAR"/>
        <result column="has_handled" property="hasHandled" jdbcType="INTEGER"/>
        <result column="total_url" property="totalUrl" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="VARCHAR"/>
        <result column="crawl_start_time" property="crawlStartTime" jdbcType="VARCHAR"/>
        <result column="crawl_end_time" property="crawlEndTime" jdbcType="VARCHAR"/>
        <result column="export_time" property="exportTime" jdbcType="VARCHAR"/>
        <result column="page_rank_time" property="pageRankTime" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, start_url, has_handled, total_url, status, create_time, crawl_start_time, crawl_end_time, export_time, page_rank_time
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from task
        where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="search" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from task
        order by create_time desc
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from task
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <delete id="truncate">
    truncate table task
  </delete>

  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="cn.upshi.sparkpagerank.model.Task">
    insert into task (id, start_url, has_handled, 
      total_url, status, create_time, crawl_start_time, crawl_end_time, export_time, page_rank_time)
    values (#{id,jdbcType=INTEGER}, #{startUrl,jdbcType=VARCHAR}, #{hasHandled,jdbcType=INTEGER}, 
      #{totalUrl,jdbcType=INTEGER}, #{status,jdbcType=INTEGER},
      #{createTime,jdbcType=VARCHAR},#{crawlStartTime,jdbcType=VARCHAR},#{crawlEndTime,jdbcType=VARCHAR},#{exportTime,jdbcType=VARCHAR},#{pageRankTime,jdbcType=VARCHAR}
      )
  </insert>

  <update id="updateByPrimaryKey" parameterType="cn.upshi.sparkpagerank.model.Task">
    update task
    set start_url = #{startUrl,jdbcType=VARCHAR},
      has_handled = #{hasHandled,jdbcType=INTEGER},
      total_url = #{totalUrl,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=VARCHAR},
      crawl_start_time = #{crawlStartTime,jdbcType=VARCHAR},
      crawl_end_time = #{crawlEndTime,jdbcType=VARCHAR},
      export_time = #{exportTime,jdbcType=VARCHAR},
      page_rank_time = #{pageRankTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="selectAndSetTotalUrl" parameterType="java.lang.Integer">
    update task
    set total_url = (select count(*) from crawl_url where task_id = #{taskId,jdbcType=INTEGER})
    where id = #{taskId,jdbcType=INTEGER}
  </update>
</mapper>